SessionTemp=="ee2" ~ "English",
SessionTemp=="ee3" ~ "Greek",
SessionTemp=="ee4" ~ "English"
))
dataWide$Language <- factor(dataWide$Language, levels = c("Greek", "English"))
cols <- c("Subject", "Helicopters")
dataWide[cols] <- lapply(dataWide[cols], factor)
dataLong <- reshape(dataWide, direction="long",
varying=c("P1Asked", "P1SCR", "P1HRV", "P1Produced", "P2Produced", "P2SCR", "P2HRV", "P2Asked"),
timevar="Phase",
times=c("cruising", "landing"),
v.names=c("Asked", "Produced", "SCR", "HRV"),
idvar=c("Subject", "Session"))
dataLong$Production_Accuracy <- dataLong$Produced-dataLong$Asked
colnames(dataLong)[colnames(dataLong) == "Session"] ="Sessiontime"
dataLong$Language <- factor(dataLong$Language, levels = c("Greek", "English"))
cols <- c("Subject", "Helicopters", "Phase")
dataLong[cols] <- lapply(dataLong[cols], factor)
dataLong <- dataLong[order(dataLong$Subject, dataLong$Helicopters, dataLong$Language, dataLong$Phase), ]
library(ggpubr)
library(rstatix)
library(nlme)
library(car)
dataHRVno <- dataLong[-c(94), ]
MANOVA2no <- lm( cbind(Production_Accuracy, Estimation_Accuracy, TLX, SCR, HRV) ~ Helicopters * Phase, data = dataHRVno)
Manova(MANOVA2no, test.statistic = "Pillai")
Manova(MANOVA2no, test.statistic = "Wilks")
Manova(MANOVA2no, test.statistic = "Hotelling-Lawley")
Manova(MANOVA2no, test.statistic = "Roy")
invisible(lapply(paste0('package:', names(sessionInfo()$otherPkgs)), detach, character.only=TRUE, unload=TRUE))
library(reshape2)
library(tidyverse)
library(readxl)
dataWide <- read_excel("Exc_Beh_Fys.xlsx")
dataWide <- dataWide[, c("Subject", "P1SCR", "P2SCR", "P1HRV", "P2HRV", "P1Asked", "P1Produced", "P2Asked", "P2Produced", "Session", "SessionTime", "EstimationSessionTime",
"MentalTLX", "PhysicalTLX", "TemporalTLX", "PerformanceTLX", "EffortTLX", "FrustrationTLX")]
dataWide$EstimationTime <- dataWide$EstimationSessionTime*60
dataWide$Estimation_Accuracy <- dataWide$EstimationTime/dataWide$SessionTime
dataWide$TLX <- (dataWide$MentalTLX+dataWide$PhysicalTLX+dataWide$TemporalTLX+dataWide$PerformanceTLX+dataWide$EffortTLX+dataWide$FrustrationTLX)/6
dataWide$Subject <- factor(dataWide$Subject)
colnames(dataWide)[colnames(dataWide) == "Session"] ="SessionTemp"
dataWide<-dataWide%>%mutate(Session = case_when(
SessionTemp=="ee1" ~ "1H-Gr",
SessionTemp=="ee2" ~ "1H-Eng",
SessionTemp=="ee3" ~ "2H-Gr",
SessionTemp=="ee4" ~ "2H-Eng"
))
dataWide<-dataWide%>%mutate(Helicopters = case_when(
SessionTemp=="ee1" ~ "one",
SessionTemp=="ee2" ~ "one",
SessionTemp=="ee3" ~ "two",
SessionTemp=="ee4" ~ "two"
))
dataWide<-dataWide%>%mutate(Language = case_when(
SessionTemp=="ee1" ~ "Greek",
SessionTemp=="ee2" ~ "English",
SessionTemp=="ee3" ~ "Greek",
SessionTemp=="ee4" ~ "English"
))
dataWide$Language <- factor(dataWide$Language, levels = c("Greek", "English"))
cols <- c("Subject", "Helicopters")
dataWide[cols] <- lapply(dataWide[cols], factor)
dataLong <- reshape(dataWide, direction="long",
varying=c("P1Asked", "P1SCR", "P1HRV", "P1Produced", "P2Produced", "P2SCR", "P2HRV", "P2Asked"),
timevar="Phase",
times=c("cruising", "landing"),
v.names=c("Asked", "Produced", "SCR", "HRV"),
idvar=c("Subject", "Session"))
dataLong$Production_Accuracy <- dataLong$Produced/dataLong$Asked
colnames(dataLong)[colnames(dataLong) == "Session"] ="Sessiontime"
dataLong$Language <- factor(dataLong$Language, levels = c("Greek", "English"))
cols <- c("Subject", "Helicopters", "Phase")
dataLong[cols] <- lapply(dataLong[cols], factor)
dataLong <- dataLong[order(dataLong$Subject, dataLong$Helicopters, dataLong$Language, dataLong$Phase), ]
library(ggpubr)
library(rstatix)
# Assumptions
# Outliers
# Use the Rosner Test for small samples
library(EnvStats)
dataHRVrosner <- dataLong[-c(12, 43, 44, 84, 84, 94), ]
MANOVA2.2 <- lm( cbind(Production_Accuracy, Estimation_Accuracy, TLX, SCR, HRV) ~ Helicopters * Language * Phase, data = dataHRVrosner)
summary(MANOVA2.2)
library(emmeans)
pwc1.1 <- dataLong %>%
group_by(Phase) %>%
pairwise_t_test(
Production_Accuracy ~ Helicopters, paired = TRUE,
p.adjust.method = "bonferroni"
)
pwc1.1 <- dataHRVrosner %>%
group_by(Phase) %>%
pairwise_t_test(
Production_Accuracy ~ Helicopters, paired = TRUE,
p.adjust.method = "bonferroni"
)
source("~/Bachelor Psychologie/Jaar 3/Bachelorproject/R studio/R script/Analyses/FYS_4_7_All.R", echo=TRUE)
pwc1.1 <- dataHRVrosner %>%
group_by(Phase) %>%
pairwise_t_test(
Production_Accuracy ~ Helicopters, paired = TRUE,
p.adjust.method = "bonferroni"
)
pwc1.1
pwc1.1 <- dataLong %>%
group_by(Phase) %>%
pairwise_t_test(
Production_Accuracy ~ Helicopters, paired = TRUE,
p.adjust.method = "bonferroni"
)
pwc1.1
dataHRVrosner %>%
pairwise_t_test(
Estimation_Accuracy ~ Helicopters, paired = TRUE,
p.adjust.method = "bonferroni"
)
pwc1.1 <- dataLong %>%
group_by(Phase) %>%
pairwise_t_test(
Production_Accuracy ~ Helicopters, paired = TRUE,
p.adjust.method = "bonferroni"
)
pwc1.1
pwc1.2 <- dataLong %>%
group_by(Helicopters) %>%
pairwise_t_test(
Production_Accuracy ~ Phase, paired = TRUE,
p.adjust.method = "bonferroni"
)
pwc1.2
dataLong %>%
pairwise_t_test(
Estimation_Accuracy ~ Helicopters, paired = TRUE,
p.adjust.method = "bonferroni"
)
dataLong %>%
pairwise_t_test(
TLX ~ Helicopters, paired = TRUE,
p.adjust.method = "bonferroni"
)
source("~/Bachelor Psychologie/Jaar 3/Bachelorproject/R studio/R script/Analyses/FYS_4_8_All.R", echo=TRUE)
source("~/Bachelor Psychologie/Jaar 3/Bachelorproject/R studio/R script/Analyses/FYS_4_9_All.R", echo=TRUE)
source("~/Bachelor Psychologie/Jaar 3/Bachelorproject/R studio/R script/Analyses/FYS_4_10_All.R", echo=TRUE)
invisible(lapply(paste0('package:', names(sessionInfo()$otherPkgs)), detach, character.only=TRUE, unload=TRUE))
library(reshape2)
library(tidyverse)
library(readxl)
dataWide <- read_excel("Exc_Beh_Fys.xlsx")
dataWide <- dataWide[, c("Subject", "P1SCR", "P2SCR", "P1HRV", "P2HRV", "P1Asked", "P1Produced", "P2Asked", "P2Produced", "Session", "SessionTime", "EstimationSessionTime",
"MentalTLX", "PhysicalTLX", "TemporalTLX", "PerformanceTLX", "EffortTLX", "FrustrationTLX")]
dataWide$EstimationTime <- dataWide$EstimationSessionTime*60
dataWide$Estimation_Accuracy <- dataWide$EstimationTime-dataWide$SessionTime
dataWide$TLX <- (dataWide$MentalTLX+dataWide$PhysicalTLX+dataWide$TemporalTLX+dataWide$PerformanceTLX+dataWide$EffortTLX+dataWide$FrustrationTLX)/6
dataWide$Subject <- factor(dataWide$Subject)
colnames(dataWide)[colnames(dataWide) == "Session"] ="SessionTemp"
dataWide<-dataWide%>%mutate(Session = case_when(
SessionTemp=="ee1" ~ "1H-Gr",
SessionTemp=="ee2" ~ "1H-Eng",
SessionTemp=="ee3" ~ "2H-Gr",
SessionTemp=="ee4" ~ "2H-Eng"
))
dataWide<-dataWide%>%mutate(Helicopters = case_when(
SessionTemp=="ee1" ~ "one",
SessionTemp=="ee2" ~ "one",
SessionTemp=="ee3" ~ "two",
SessionTemp=="ee4" ~ "two"
))
dataWide<-dataWide%>%mutate(Language = case_when(
SessionTemp=="ee1" ~ "Greek",
SessionTemp=="ee2" ~ "English",
SessionTemp=="ee3" ~ "Greek",
SessionTemp=="ee4" ~ "English"
))
dataWide$Language <- factor(dataWide$Language, levels = c("Greek", "English"))
cols <- c("Subject", "Helicopters")
dataWide[cols] <- lapply(dataWide[cols], factor)
dataLong <- reshape(dataWide, direction="long",
varying=c("P1Asked", "P1SCR", "P1HRV", "P1Produced", "P2Produced", "P2SCR", "P2HRV", "P2Asked"),
timevar="Phase",
times=c("cruising", "landing"),
v.names=c("Asked", "Produced", "SCR", "HRV"),
idvar=c("Subject", "Session"))
dataLong$Production_Accuracy <- dataLong$Produced-dataLong$Asked
colnames(dataLong)[colnames(dataLong) == "Session"] ="Sessiontime"
dataLong$Language <- factor(dataLong$Language, levels = c("Greek", "English"))
cols <- c("Subject", "Helicopters", "Phase")
dataLong[cols] <- lapply(dataLong[cols], factor)
dataLong <- dataLong[order(dataLong$Subject, dataLong$Helicopters, dataLong$Language, dataLong$Phase), ]
library(ggpubr)
library(rstatix)
dataHRVno <- dataLong[-c(6, 12, 43, 44, 83, 84, 94), ]
library(nlme)
MANOVA2no <- lm( cbind(Production_Accuracy, Estimation_Accuracy, TLX, SCR, HRV) ~ Helicopters * Language * Phase, data = dataHRVno)
summary(MANOVA2no)
invisible(lapply(paste0('package:', names(sessionInfo()$otherPkgs)), detach, character.only=TRUE, unload=TRUE))
library(reshape2)
library(tidyverse)
library(readxl)
dataWide <- read_excel("Exc_Beh_Fys.xlsx")
dataWide <- dataWide[, c("Subject", "P1SCR", "P2SCR", "P1HRV", "P2HRV", "P1Asked", "P1Produced", "P2Asked", "P2Produced", "Session", "SessionTime", "EstimationSessionTime",
"MentalTLX", "PhysicalTLX", "TemporalTLX", "PerformanceTLX", "EffortTLX", "FrustrationTLX")]
dataWide$EstimationTime <- dataWide$EstimationSessionTime*60
dataWide$Estimation_Accuracy <- dataWide$EstimationTime-dataWide$SessionTime
dataWide$TLX <- (dataWide$MentalTLX+dataWide$PhysicalTLX+dataWide$TemporalTLX+dataWide$PerformanceTLX+dataWide$EffortTLX+dataWide$FrustrationTLX)/6
dataWide$Subject <- factor(dataWide$Subject)
colnames(dataWide)[colnames(dataWide) == "Session"] ="SessionTemp"
dataWide<-dataWide%>%mutate(Session = case_when(
SessionTemp=="ee1" ~ "1H-Gr",
SessionTemp=="ee2" ~ "1H-Eng",
SessionTemp=="ee3" ~ "2H-Gr",
SessionTemp=="ee4" ~ "2H-Eng"
))
dataWide<-dataWide%>%mutate(Helicopters = case_when(
SessionTemp=="ee1" ~ "one",
SessionTemp=="ee2" ~ "one",
SessionTemp=="ee3" ~ "two",
SessionTemp=="ee4" ~ "two"
))
dataWide<-dataWide%>%mutate(Language = case_when(
SessionTemp=="ee1" ~ "Greek",
SessionTemp=="ee2" ~ "English",
SessionTemp=="ee3" ~ "Greek",
SessionTemp=="ee4" ~ "English"
))
dataWide$Language <- factor(dataWide$Language, levels = c("Greek", "English"))
cols <- c("Subject", "Helicopters")
dataWide[cols] <- lapply(dataWide[cols], factor)
dataLong <- reshape(dataWide, direction="long",
varying=c("P1Asked", "P1SCR", "P1HRV", "P1Produced", "P2Produced", "P2SCR", "P2HRV", "P2Asked"),
timevar="Phase",
times=c("cruising", "landing"),
v.names=c("Asked", "Produced", "SCR", "HRV"),
idvar=c("Subject", "Session"))
dataLong$Production_Accuracy <- dataLong$Produced-dataLong$Asked
colnames(dataLong)[colnames(dataLong) == "Session"] ="Sessiontime"
dataLong$Language <- factor(dataLong$Language, levels = c("Greek", "English"))
cols <- c("Subject", "Helicopters", "Phase")
dataLong[cols] <- lapply(dataLong[cols], factor)
dataLong <- dataLong[order(dataLong$Subject, dataLong$Helicopters, dataLong$Language, dataLong$Phase), ]
library(ggpubr)
library(rstatix)
library(nlme)
library(car)
dataHRVno <- dataLong[-c(94), ]
library(nlme)
MANOVA2no <- lm( cbind(Production_Accuracy, Estimation_Accuracy, TLX, SCR, HRV) ~ Helicopters * Language * Phase, data = dataHRVno)
summary(MANOVA2no)
invisible(lapply(paste0('package:', names(sessionInfo()$otherPkgs)), detach, character.only=TRUE, unload=TRUE))
library(reshape2)
library(tidyverse)
library(readxl)
dataWide <- read_excel("Exc_Beh_Fys.xlsx")
dataWide <- dataWide[, c("Subject", "P1SCR", "P2SCR", "P1HRV", "P2HRV", "P1Asked", "P1Produced", "P2Asked", "P2Produced", "Session", "SessionTime", "EstimationSessionTime",
"MentalTLX", "PhysicalTLX", "TemporalTLX", "PerformanceTLX", "EffortTLX", "FrustrationTLX")]
dataWide$EstimationTime <- dataWide$EstimationSessionTime*60
dataWide$Estimation_Accuracy <- dataWide$EstimationTime/dataWide$SessionTime
dataWide$TLX <- (dataWide$MentalTLX+dataWide$PhysicalTLX+dataWide$TemporalTLX+dataWide$PerformanceTLX+dataWide$EffortTLX+dataWide$FrustrationTLX)/6
dataWide$Subject <- factor(dataWide$Subject)
colnames(dataWide)[colnames(dataWide) == "Session"] ="SessionTemp"
dataWide<-dataWide%>%mutate(Session = case_when(
SessionTemp=="ee1" ~ "1H-Gr",
SessionTemp=="ee2" ~ "1H-Eng",
SessionTemp=="ee3" ~ "2H-Gr",
SessionTemp=="ee4" ~ "2H-Eng"
))
dataWide<-dataWide%>%mutate(Helicopters = case_when(
SessionTemp=="ee1" ~ "one",
SessionTemp=="ee2" ~ "one",
SessionTemp=="ee3" ~ "two",
SessionTemp=="ee4" ~ "two"
))
dataWide<-dataWide%>%mutate(Language = case_when(
SessionTemp=="ee1" ~ "Greek",
SessionTemp=="ee2" ~ "English",
SessionTemp=="ee3" ~ "Greek",
SessionTemp=="ee4" ~ "English"
))
dataWide$Language <- factor(dataWide$Language, levels = c("Greek", "English"))
cols <- c("Subject", "Helicopters")
dataWide[cols] <- lapply(dataWide[cols], factor)
dataLong <- reshape(dataWide, direction="long",
varying=c("P1Asked", "P1SCR", "P1HRV", "P1Produced", "P2Produced", "P2SCR", "P2HRV", "P2Asked"),
timevar="Phase",
times=c("cruising", "landing"),
v.names=c("Asked", "Produced", "SCR", "HRV"),
idvar=c("Subject", "Session"))
dataLong$Production_Accuracy <- dataLong$Produced/dataLong$Asked
colnames(dataLong)[colnames(dataLong) == "Session"] ="Sessiontime"
dataLong$Language <- factor(dataLong$Language, levels = c("Greek", "English"))
cols <- c("Subject", "Helicopters", "Phase")
dataLong[cols] <- lapply(dataLong[cols], factor)
dataLong <- dataLong[order(dataLong$Subject, dataLong$Helicopters, dataLong$Language, dataLong$Phase), ]
library(ggpubr)
library(rstatix)
# Assumptions
# Outliers
# Use the Rosner Test for small samples
library(EnvStats)
library(base)
dataHRVrosner <- dataLong[-c(12, 43, 44, 84, 84, 94), ]
MANOVA2.2 <- lm( cbind(Production_Accuracy, Estimation_Accuracy, TLX, SCR, HRV) ~ Helicopters * Phase, data = dataHRVrosner)
summary(MANOVA2.2)
invisible(lapply(paste0('package:', names(sessionInfo()$otherPkgs)), detach, character.only=TRUE, unload=TRUE))
library(reshape2)
library(tidyverse)
library(readxl)
dataWide <- read_excel("Exc_Beh_Fys.xlsx")
dataWide <- dataWide[, c("Subject", "P1SCR", "P2SCR", "P1HRV", "P2HRV", "P1Asked", "P1Produced", "P2Asked", "P2Produced", "Session", "SessionTime", "EstimationSessionTime",
"MentalTLX", "PhysicalTLX", "TemporalTLX", "PerformanceTLX", "EffortTLX", "FrustrationTLX")]
dataWide$EstimationTime <- dataWide$EstimationSessionTime*60
dataWide$Estimation_Accuracy <- dataWide$EstimationTime-dataWide$SessionTime
dataWide$TLX <- (dataWide$MentalTLX+dataWide$PhysicalTLX+dataWide$TemporalTLX+dataWide$PerformanceTLX+dataWide$EffortTLX+dataWide$FrustrationTLX)/6
dataWide$Subject <- factor(dataWide$Subject)
colnames(dataWide)[colnames(dataWide) == "Session"] ="SessionTemp"
dataWide<-dataWide%>%mutate(Session = case_when(
SessionTemp=="ee1" ~ "1H-Gr",
SessionTemp=="ee2" ~ "1H-Eng",
SessionTemp=="ee3" ~ "2H-Gr",
SessionTemp=="ee4" ~ "2H-Eng"
))
dataWide<-dataWide%>%mutate(Helicopters = case_when(
SessionTemp=="ee1" ~ "one",
SessionTemp=="ee2" ~ "one",
SessionTemp=="ee3" ~ "two",
SessionTemp=="ee4" ~ "two"
))
dataWide<-dataWide%>%mutate(Language = case_when(
SessionTemp=="ee1" ~ "Greek",
SessionTemp=="ee2" ~ "English",
SessionTemp=="ee3" ~ "Greek",
SessionTemp=="ee4" ~ "English"
))
dataWide$Language <- factor(dataWide$Language, levels = c("Greek", "English"))
cols <- c("Subject", "Helicopters")
dataWide[cols] <- lapply(dataWide[cols], factor)
colnames(dataWide)[colnames(dataWide) == "PJOT"] ="Passage_Of_Time"
dataLong <- reshape(dataWide, direction="long",
varying=c("P1Asked", "P1SCR", "P1HRV", "P1Produced", "P2Produced", "P2SCR", "P2HRV", "P2Asked"),
timevar="Phase",
times=c("cruising", "landing"),
v.names=c("Asked", "Produced", "SCR", "HRV"),
idvar=c("Subject", "Session"))
dataLong$Production_Accuracy <- dataLong$Produced/dataLong$Asked
colnames(dataLong)[colnames(dataLong) == "Session"] ="Sessiontime"
dataLong$Language <- factor(dataLong$Language, levels = c("Greek", "English"))
cols <- c("Subject", "Helicopters", "Phase")
dataLong[cols] <- lapply(dataLong[cols], factor)
dataLong <- dataLong[order(dataLong$Subject, dataLong$Helicopters, dataLong$Language, dataLong$Phase), ]
################################################################
library(ggpubr)
library(rstatix)
outliers_HRV <- dataLong$HRV[dataLong$HRV < q1HRV - 1.5*iqrHRV | dataLong$HRV > q3HRV + 1.5*iqrHRV]
dataHRVno <- dataLong[-c(6, 12, 43, 44, 83, 84, 94), ]
library(nlme)
MANOVA2no <- lm( cbind(Production_Accuracy, Estimation_Accuracy, TLX, SCR, HRV) ~ Helicopters * Phase, data = dataHRVno)
summary(MANOVA2no)
invisible(lapply(paste0('package:', names(sessionInfo()$otherPkgs)), detach, character.only=TRUE, unload=TRUE))
library(reshape2)
library(tidyverse)
library(readxl)
dataWide <- read_excel("Exc_Beh_Fys.xlsx")
dataWide <- dataWide[, c("Subject", "P1SCR", "P2SCR", "P1HRV", "P2HRV", "P1Asked", "P1Produced", "P2Asked", "P2Produced", "Session", "SessionTime", "EstimationSessionTime",
"MentalTLX", "PhysicalTLX", "TemporalTLX", "PerformanceTLX", "EffortTLX", "FrustrationTLX")]
dataWide$EstimationTime <- dataWide$EstimationSessionTime*60
dataWide$Estimation_Accuracy <- dataWide$EstimationTime-dataWide$SessionTime
dataWide$TLX <- (dataWide$MentalTLX+dataWide$PhysicalTLX+dataWide$TemporalTLX+dataWide$PerformanceTLX+dataWide$EffortTLX+dataWide$FrustrationTLX)/6
dataWide$Subject <- factor(dataWide$Subject)
colnames(dataWide)[colnames(dataWide) == "Session"] ="SessionTemp"
dataWide<-dataWide%>%mutate(Session = case_when(
SessionTemp=="ee1" ~ "1H-Gr",
SessionTemp=="ee2" ~ "1H-Eng",
SessionTemp=="ee3" ~ "2H-Gr",
SessionTemp=="ee4" ~ "2H-Eng"
))
dataWide<-dataWide%>%mutate(Helicopters = case_when(
SessionTemp=="ee1" ~ "one",
SessionTemp=="ee2" ~ "one",
SessionTemp=="ee3" ~ "two",
SessionTemp=="ee4" ~ "two"
))
dataWide<-dataWide%>%mutate(Language = case_when(
SessionTemp=="ee1" ~ "Greek",
SessionTemp=="ee2" ~ "English",
SessionTemp=="ee3" ~ "Greek",
SessionTemp=="ee4" ~ "English"
))
dataWide$Language <- factor(dataWide$Language, levels = c("Greek", "English"))
cols <- c("Subject", "Helicopters")
dataWide[cols] <- lapply(dataWide[cols], factor)
colnames(dataWide)[colnames(dataWide) == "PJOT"] ="Passage_Of_Time"
dataLong <- reshape(dataWide, direction="long",
varying=c("P1Asked", "P1SCR", "P1HRV", "P1Produced", "P2Produced", "P2SCR", "P2HRV", "P2Asked"),
timevar="Phase",
times=c("cruising", "landing"),
v.names=c("Asked", "Produced", "SCR", "HRV"),
idvar=c("Subject", "Session"))
dataLong$Production_Accuracy <- dataLong$Produced/dataLong$Asked
colnames(dataLong)[colnames(dataLong) == "Session"] ="Sessiontime"
dataLong$Language <- factor(dataLong$Language, levels = c("Greek", "English"))
cols <- c("Subject", "Helicopters", "Phase")
dataLong[cols] <- lapply(dataLong[cols], factor)
dataLong <- dataLong[order(dataLong$Subject, dataLong$Helicopters, dataLong$Language, dataLong$Phase), ]
library(ggpubr)
library(rstatix)
library(nlme)
library(car)
dataHRVno <- dataLong[-c(94), ]
MANOVA2no <- lm( cbind(Production_Accuracy, Estimation_Accuracy, TLX, SCR, HRV) ~ Helicopters * Phase, data = dataHRVno)
summary(MANOVA2no)
source("~/Bachelor Psychologie/Jaar 3/Bachelorproject/R studio/R script/Analyses/ProductionTask-Analysis.R", echo=TRUE)
invisible(lapply(paste0('package:', names(sessionInfo()$otherPkgs)), detach, character.only=TRUE, unload=TRUE))
library(reshape2)
library(tidyverse)
dataWide <- read.csv("AirTrafficControllers-ΒehaviouralData.csv", header=TRUE)
dataWide <- dataWide[, c("Subject", "Session", "SessionTime", "EstimationSessionTime", "PJOT",
"MentalTLX", "PhysicalTLX", "TemporalTLX", "PerformanceTLX", "EffortTLX", "FrustrationTLX")]
dataWide$EstimationTime <- dataWide$EstimationSessionTime*60
dataWide$Estimation_Accuracy <- dataWide$EstimationTime/dataWide$SessionTime
dataWide$TLX <- (dataWide$MentalTLX+dataWide$PhysicalTLX+dataWide$TemporalTLX+dataWide$PerformanceTLX+dataWide$EffortTLX+dataWide$FrustrationTLX)/6
colnames(dataWide)[colnames(dataWide) == "Session"] ="SessionTemp"
dataWide<-dataWide%>%mutate(Session = case_when(
SessionTemp=="ee1" ~ "1H-Gr",
SessionTemp=="ee2" ~ "1H-Eng",
SessionTemp=="ee3" ~ "2H-Gr",
SessionTemp=="ee4" ~ "2H-Eng"
))
dataWide<-dataWide%>%mutate(Helicopters = case_when(
SessionTemp=="ee1" ~ "one",
SessionTemp=="ee2" ~ "one",
SessionTemp=="ee3" ~ "two",
SessionTemp=="ee4" ~ "two"
))
dataWide<-dataWide%>%mutate(Language = case_when(
SessionTemp=="ee1" ~ "Greek",
SessionTemp=="ee2" ~ "English",
SessionTemp=="ee3" ~ "Greek",
SessionTemp=="ee4" ~ "English"
))
dataWide$Subject <- factor(dataWide$Subject)
dataWide$Language <- factor(dataWide$Language, levels = c("Greek", "English"))
cols <- c("Subject", "Helicopters")
dataWide[cols] <- lapply(dataWide[cols], factor)
colnames(dataWide)[colnames(dataWide) == "PJOT"] ="Passage_Of_Time"
dataWide <- dataWide[, c("Subject", "Helicopters", "Language", "Estimation_Accuracy","Passage_Of_Time",
"MentalTLX", "PhysicalTLX", "TemporalTLX", "PerformanceTLX", "EffortTLX", "FrustrationTLX", "TLX")]
dataLong <- dataWide
dataLong <- dataLong[order(dataLong$Subject, dataLong$Helicopters, dataLong$Language), ]
library(ggpubr)
library(rstatix)
# Assumptions
# Outliers
# Use the Rosner Test for small samples
library(EnvStats)
res.aov <- anova_test(
data = dataLong, dv = TLX, wid = Subject,
within = c(Helicopters, Language)
)
get_anova_table(res.aov)
pwc2 <- dataLong %>%
pairwise_t_test(
TLX ~ Language, paired = TRUE,
p.adjust.method = "bonferroni"
)
pwc2
source("~/Bachelor Psychologie/Jaar 3/Bachelorproject/R studio/R script/Analyses/FYS_4_2_Prod.R", echo=TRUE)
source("~/Bachelor Psychologie/Jaar 3/Bachelorproject/R studio/R script/Analyses/FYS_4_2_TLX.R", echo=TRUE)
source("~/Bachelor Psychologie/Jaar 3/Bachelorproject/R studio/R script/Analyses/FYS_4_2_TLX.R", echo=TRUE)
source("~/Bachelor Psychologie/Jaar 3/Bachelorproject/R studio/R script/Analyses/FYS_4_3_TLX.R", echo=TRUE)
source("~/Bachelor Psychologie/Jaar 3/Bachelorproject/R studio/R script/Analyses/FYS_4_3_TLX.R", echo=TRUE)
res.aov <- anova_test(
data = dataLong, dv = TLX, wid = Subject,
within = c(Helicopters, Language)
)
get_anova_table(res.aov)
pwc1 <- dataLong %>%
pairwise_t_test(
TLX ~ Helicopters, paired = TRUE,
p.adjust.method = "bonferroni"
)
pwc1
pwc2 <- dataLong %>%
pairwise_t_test(
TLX ~ Language, paired = TRUE,
p.adjust.method = "bonferroni"
)
pwc2
source("~/Bachelor Psychologie/Jaar 3/Bachelorproject/R studio/R script/Analyses/FYS_4_3_Prod.R", echo=TRUE)
source("~/Bachelor Psychologie/Jaar 3/Bachelorproject/R studio/R script/Analyses/FYS_4_4_Prod.R", echo=TRUE)
source("~/Bachelor Psychologie/Jaar 3/Bachelorproject/R studio/R script/Analyses/FYS_4_5_Prod.R", echo=TRUE)
source("~/Bachelor Psychologie/Jaar 3/Bachelorproject/R studio/R script/Analyses/FYS_4_6_Prod.R", echo=TRUE)
source("~/Bachelor Psychologie/Jaar 3/Bachelorproject/R studio/R script/Analyses/FYS_4_13_Prod.R", echo=TRUE)
source("~/Bachelor Psychologie/Jaar 3/Bachelorproject/R studio/R script/Analyses/FYS_4_14_Prod.R", echo=TRUE)
source("~/Bachelor Psychologie/Jaar 3/Bachelorproject/R studio/R script/Analyses/FYS_4_15_Prod.R", echo=TRUE)
source("~/Bachelor Psychologie/Jaar 3/Bachelorproject/R studio/R script/Analyses/FYS_4_16_Prod.R", echo=TRUE)
source("~/Bachelor Psychologie/Jaar 3/Bachelorproject/R studio/R script/Analyses/FYS_4_17_Prod.R", echo=TRUE)
source("~/Bachelor Psychologie/Jaar 3/Bachelorproject/R studio/R script/Analyses/FYS_4_18_Prod.R", echo=TRUE)
source("~/Bachelor Psychologie/Jaar 3/Bachelorproject/R studio/R script/Analyses/FYS_6_11.R", echo=TRUE)
source("~/Bachelor Psychologie/Jaar 3/Bachelorproject/R studio/R script/Analyses/FYS_6_12.R", echo=TRUE)
source("~/Bachelor Psychologie/Jaar 3/Bachelorproject/R studio/R script/Analyses/FYS_6_4.R", echo=TRUE)
source("~/Bachelor Psychologie/Jaar 3/Bachelorproject/R studio/R script/Analyses/FYS_4_7_All.R", echo=TRUE)
source("~/Bachelor Psychologie/Jaar 3/Bachelorproject/R studio/R script/Analyses/FYS_4_8_All.R", echo=TRUE)
source("~/Bachelor Psychologie/Jaar 3/Bachelorproject/R studio/R script/Analyses/FYS_4_9_All.R", echo=TRUE)
source("~/Bachelor Psychologie/Jaar 3/Bachelorproject/R studio/R script/Analyses/FYS_4_10_All.R", echo=TRUE)
source("~/Bachelor Psychologie/Jaar 3/Bachelorproject/R studio/R script/Analyses/FYS_4_11_All.R", echo=TRUE)
source("~/Bachelor Psychologie/Jaar 3/Bachelorproject/R studio/R script/Analyses/FYS_4_12_All.R", echo=TRUE)
source("~/Bachelor Psychologie/Jaar 3/Bachelorproject/R studio/R script/Analyses/FYS_4_19_All.R", echo=TRUE)
source("~/Bachelor Psychologie/Jaar 3/Bachelorproject/R studio/R script/Analyses/FYS_4_20_All.R", echo=TRUE)
source("~/Bachelor Psychologie/Jaar 3/Bachelorproject/R studio/R script/Analyses/FYS_4_21_All.R", echo=TRUE)
source("~/Bachelor Psychologie/Jaar 3/Bachelorproject/R studio/R script/Analyses/FYS_4_22_All.R", echo=TRUE)
source("~/Bachelor Psychologie/Jaar 3/Bachelorproject/R studio/R script/Analyses/FYS_4_23_All.R", echo=TRUE)
source("~/Bachelor Psychologie/Jaar 3/Bachelorproject/R studio/R script/Analyses/FYS_4_24_All.R", echo=TRUE)
source("~/Bachelor Psychologie/Jaar 3/Bachelorproject/R studio/R script/Analyses/FYS_4_7_All.R", echo=TRUE)
